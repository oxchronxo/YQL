<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
	<meta>
		<author>Eric Fehrenbacher</author>
		<sampleQuery>select * from playlists where playlist_id=@playlist_id</sampleQuery>
		<documentationURL></documentationURL>
	</meta>
	<bindings>
		<select itemPath="" produces="XML">
			<urls>
				<url>http://pl.playlist.com/pl.php</url>
			</urls>
			<inputs>
				<key id="playlist_id" type="xs:string" paramType="variable" required="true"/>
			</inputs>
			<execute><![CDATA[

function decrypt(src) {
	var sbox = [];
	var mykey = [];
	
	// hexToChars
	var plaintxt = [];
	var plaintxtIndex = (src.substr(0, 2) == "0x") ? 2 : 0;
	while (plaintxtIndex < src.split("").length) {
		plaintxt.push(parseInt(src.substr(plaintxtIndex, 2), 16));
		plaintxtIndex += 2;
	}
	return plaintxt.toString();
	
	// strToChars
	var key = "sdf883jsdf22";
	var psw = [];
	var pswIndex = 0;
	while (pswIndex < key.split("").length) {
		psw.push(key.charCodeAt(pswIndex));
		++pswIndex;
	}
	
	// init - stage 1
	init_a = 0;
	init_b = 0;
	while (init_b <= 255) {
		mykey[init_b] = psw[init_b % psw.length];
		sbox[init_b] = init_b;
		++init_b;
	}
	// init - stage 2
	init_c = 0;
	init_d = 0;
	while (init_c <= 255) {
		init_a = (init_a + sbox[init_c] + mykey[init_c]) % 256;
		init_d = sbox[init_c];
		sbox[init_c] = sbox[init_a];
		sbox[init_a] = init_d;
		++init_c;
	}
	// init - cleanup
	delete init_a;
	delete init_b;
	delete init_c;
	delete init_d;
	
	// calculate
	var chars = [];
	var charsIndex = 0;
	var chars_a = 0;
	var chars_b = 0;
	var chars_d;
	var chars_e;
	var chars_f;
	var chars_g;
	var chars_h;
	while (charsIndex < plaintxt.length) {
		chars_a = (chars_a + 1) % 256;
		chars_b = (chars_b + sbox[chars_a]) % 256;
		chars_e = sbox[chars_a];
		sbox[chars_a] = this.sbox[chars_b];
		sbox[chars_b] = chars_e;
		chars_h = (sbox[chars_a] + sbox[chars_b]) % 256;
		chars_d = sbox[chars_h];
		chars_f = plaintxt[charsIndex] ^ chars_d;
		chars.push(chars_f);
		++charsIndex;
	}
	
	// charsToStr
	var str = "";
	var strIndex = 0;
	while (strIndex < chars.length) {
		str += String.fromCharCode(chars[strIndex]);
		++strIndex;
	}
	
	return str;
}

//y.include();

//response.query.response.playlist.trackList

playlist = y.rest("http://pl.playlist.com/pl.php?playlist=" + playlist_id).get().response;

for (var i = 0; i < playlist.trackList.track.length(); i++) {
	playlist.trackList.track[i].location = decrypt(playlist.trackList.track[i].location);
}

response.object = playlist;

			]]></execute>
		</select>
	</bindings>
</table>
