<?xml version="1.0" encoding="UTF-8" ?>
<table xmlns="http://query.yahooapis.com/v1/schema/table.xsd">
	<meta>
		<author>Eric Fehrenbacher</author>
		<sampleQuery>select * from playlists where playlist_id=@playlist_id</sampleQuery>
		<documentationURL></documentationURL>
	</meta>
	<bindings>
		<select itemPath="" produces="XML">
			<urls>
				<url>http://pl.playlist.com/pl.php</url>
			</urls>
			<inputs>
				<key id="playlist_id" type="xs:string" paramType="variable" required="true"/>
			</inputs>
			<execute><![CDATA[

y.include("http://github.com/oxchronxo/YQL/raw/master/playlist.com.db.table.js");

var url = "http://pl.playlist.com/pl.php?playlist=" + playlist_id;
var playlist = y.rest(url).get().response;

// create standardized format
var output = <playlist xmlns="http://xspf.org/ns/0/" version="0">
	<meta http-equiv="Cache-Control" content="no-cache"/>
	<meta http-equiv="Pragma" content="no-cache"/>
	<info>{url}</info>
</playlist>;
output.trackList = playlist.trackList;

// cleanup tracks
for (var i = 0, track = ""; i < output.trackList.track.length(); i++) {
	track = output.trackList.track[i];
	// normalize track location
	track.location = !track.location.split("").length ? track.originallocation : decrypt(track.location);
	// add aliases
	track.img = String(track.image) || "";
	track.title = String(track.tracktitle) || "";
	// clear empty fields
	if (track.album == "Untitled") {
		track.album = "";
	}
	// remove proprietary
	delete track.trackid;
	delete track.bluewireid;
	delete track.annotation;
	delete track.originallocation;
}
// append new tracklist
//output.trackList = playlist.trackList;
// cleanup tracklist node
delete output.trackList[0].@xmlns;

response.object = output;

			]]></execute>
		</select>
	</bindings>
</table>
